CHEATSHEET 2 SOCKET.IO

1) Have the NodeJS server render views/index.ejs that has the html content for the client whenever the client requests "/".

    routings/index.js

    app.get("/", function(req, res){
      res.render('index', {});
    });

2) In the client codes, have a javascript code that asks the user for their name and store this user input in a variable called "name".

    <script>
        var name = prompt ('What is your name?');
    </script>


3) Have the client EMIT "got_a_new_user" and pass "name" to the server.

    <script>
        var name = prompt('What is your name?');
        io = io.connect();
        io.emit('got_a_new_user', {name: name})
    <script>

4) Have the server LESTEN for an event called "got_a_new_user" and when that event gets triggered....

    4.1) Have the server BROADCAST  and event called "new_user" to the clients with the name of the new user attached to this event.

        app.io.route('got_a_new_user', function(req){
            req.data.name
            app.io.broadcast('new_user', {new_user_name: req.data.name});
        });

    4.2) We store the name/session_id of the new user in a variable/array/hash called "users",

        var users = {};  ....find how to put users info into this variable and pass it.

    4.3) To the person who sent this request, we EMIT an event called "existing_users" with all the users data.

        app.io.route('got_a_new_user', function(req){
            req.data.name
            app.io.broadcast('new_user', {new_user_name: req.data.name});
            .....add from 4.2.. var users....
            req.io.emit('existing_users', users);
        });

5) Have the client LISTEN for an event called "new_user" and when this event gets triggered, have the client render this information in jQuery somewhere in the HTML.

    <scipt>
        var name =  prompt("What is your name?");
        io = io.connect();
        io.emit('got_a_new_user', {name: name});

        io.on('new_user', function(data){
            ... render this info in the HTML
        })
    <scipt>

6) Have the server listen for an event called "disconnect", and when this occurs, BROADCAST to all the clients an event "disconnected_user" with some data (name of the disconnected user) (NOTE: we''ll probably need to pass sessionID or something else to identify a user)

7) Have the client listen for an event "disconnected_user" and when this gets triggered, have the client remove the proper jQuery box.



























//
